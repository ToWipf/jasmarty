package org.wipf.jasmarty.datatypes.jasmarty;

/**
 * @author wipf
 *
 */
public class Lcd12864Font {
	private int nFontX;
	private int nFontY;
	private int nMaxLineLenth;
	private int nMaxLines;
	private Lcd12864fontType selectedFont;

	public enum Lcd12864fontType {
		FONT_57, FONT_68
	};

	/**
	 * @param ftype
	 */
	public Lcd12864Font(Lcd12864fontType ftype) {
		selectFont(ftype);
	}

	/**
	 * @param ftype
	 */
	private void selectFont(Lcd12864fontType ftype) {
		this.selectedFont = ftype;
		switch (selectedFont) {
		case FONT_57:
			this.nFontX = 5;
			this.nFontY = 7;
			this.nMaxLineLenth = 21;// TODO
			this.nMaxLines = 8;// TODO
			break;
		case FONT_68:
			this.nFontX = 6;
			this.nFontY = 8;
			this.nMaxLineLenth = 16; // TODO
			this.nMaxLines = 6;// TODO
			break;
		default:
			break;
		}
	}

	/**
	 * @return
	 */
	public int getFontX() {
		return nFontX;
	}

	/**
	 * @return
	 */
	public int getFontY() {
		return nFontY;
	}

	/**
	 * @return
	 */
	public int getMaxLineLenth() {
		return nMaxLineLenth;
	}

	/**
	 * @return
	 */
	public int getMaxLines() {
		return nMaxLines;
	}

	/**
	 * @param c
	 * @return
	 */
	public byte[] getChar(char c) {
		switch (selectedFont) {
		case FONT_57:
			return getChar57(c);
		case FONT_68:
			return getChar68(c);
		default:
			return null;
		}
	}

	/**
	 * @param c
	 * @return
	 */
	private byte[] getChar57(char c) {
		switch (c) {
		case ' ':
			return new byte[] { (byte) 0x00 }; //
		case '!':
			return new byte[] { (byte) 0x5F }; // !
		case '"':
			return new byte[] { (byte) 0x03, (byte) 0x00, (byte) 0x03 }; // "
		case '#':
			return new byte[] { (byte) 0x14, (byte) 0x7F, (byte) 0x14, (byte) 0x7F, (byte) 0x14 }; // #
		case '$':
			return new byte[] { (byte) 0x24, (byte) 0x4A, (byte) 0xFF, (byte) 0x4A, (byte) 0x34 }; // $
		case '%':
			return new byte[] { (byte) 0x61, (byte) 0x1C, (byte) 0x43 }; // %
		case '&':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x7F, (byte) 0x7F, (byte) 0x7F }; // & //TODO
		case '\'':
			return new byte[] { (byte) 0x06, (byte) 0x09, (byte) 0x09, (byte) 0x06 }; // '
		case '(':
			return new byte[] { (byte) 0x3E, (byte) 0x41 }; // (
		case ')':
			return new byte[] { (byte) 0x41, (byte) 0x3E }; // )
		case '*':
			return new byte[] { (byte) 0x14, (byte) 0x08, (byte) 0x1C, (byte) 0x08, (byte) 0x14 }; // *
		case '+':
			return new byte[] { (byte) 0x08, (byte) 0x08, (byte) 0x3E, (byte) 0x08, (byte) 0x08 }; // +
		case ',':
			return new byte[] { (byte) 0x80, (byte) 0x40 }; // ,
		case '-':
			return new byte[] { (byte) 0x08, (byte) 0x08, (byte) 0x08, (byte) 0x08, (byte) 0x08 }; // -
		case '.':
			return new byte[] { (byte) 0x40 }; // .
		case '/':
			return new byte[] { (byte) 0x60, (byte) 0x1C, (byte) 0x03 }; // /
		case '0':
			return new byte[] { (byte) 0x3E, (byte) 0x41, (byte) 0x41, (byte) 0x41, (byte) 0x3E }; // 0
		case '1':
			return new byte[] { (byte) 0x44, (byte) 0x42, (byte) 0x7F, (byte) 0x40, (byte) 0x40 }; // 1
		case '2':
			return new byte[] { (byte) 0x62, (byte) 0x51, (byte) 0x49, (byte) 0x49, (byte) 0x46 }; // 2
		case '3':
			return new byte[] { (byte) 0x22, (byte) 0x41, (byte) 0x49, (byte) 0x49, (byte) 0x36 }; // 3
		case '4':
			return new byte[] { (byte) 0x18, (byte) 0x14, (byte) 0x12, (byte) 0x7F, (byte) 0x10 }; // 4
		case '5':
			return new byte[] { (byte) 0x4F, (byte) 0x49, (byte) 0x49, (byte) 0x49, (byte) 0x31 }; // 5
		case '6':
			return new byte[] { (byte) 0x3E, (byte) 0x49, (byte) 0x49, (byte) 0x49, (byte) 0x32 }; // 6
		case '7':
			return new byte[] { (byte) 0x01, (byte) 0x61, (byte) 0x11, (byte) 0x09, (byte) 0x07 }; // 7
		case '8':
			return new byte[] { (byte) 0x36, (byte) 0x49, (byte) 0x49, (byte) 0x49, (byte) 0x36 }; // 8
		case '9':
			return new byte[] { (byte) 0x26, (byte) 0x49, (byte) 0x49, (byte) 0x49, (byte) 0x3E }; // 9
		case ':':
			return new byte[] { (byte) 0x28 }; // :
		case ';':
			return new byte[] { (byte) 0x80, (byte) 0x48, }; // ;
		case '<':
			return new byte[] { (byte) 0x08, (byte) 0x14, (byte) 0x22, (byte) 0x41 }; // <
		case '=':
			return new byte[] { (byte) 0x14, (byte) 0x14, (byte) 0x14, (byte) 0x14 }; // =
		case '>':
			return new byte[] { (byte) 0x41, (byte) 0x22, (byte) 0x14, (byte) 0x08 }; // >
		case '?':
			return new byte[] { (byte) 0x02, (byte) 0x51, (byte) 0x09, (byte) 0x06 }; // ?
		case '@':
			return new byte[] { (byte) 0x3E, (byte) 0x59, (byte) 0x59, (byte) 0x59, (byte) 0x46 }; // @
		case 'A':
			return new byte[] { (byte) 0x7E, (byte) 0x11, (byte) 0x11, (byte) 0x11, (byte) 0x7E }; // A
		case 'B':
			return new byte[] { (byte) 0x7F, (byte) 0x49, (byte) 0x49, (byte) 0x49, (byte) 0x36 }; // B
		case 'C':
			return new byte[] { (byte) 0x3E, (byte) 0x41, (byte) 0x41, (byte) 0x41, (byte) 0x22 }; // C
		case 'D':
			return new byte[] { (byte) 0x7F, (byte) 0x41, (byte) 0x41, (byte) 0x41, (byte) 0x3E }; // D
		case 'E':
			return new byte[] { (byte) 0x7F, (byte) 0x49, (byte) 0x49, (byte) 0x41, (byte) 0x41 }; // E
		case 'F':
			return new byte[] { (byte) 0x7F, (byte) 0x09, (byte) 0x09, (byte) 0x01, (byte) 0x01 }; // F
		case 'G':
			return new byte[] { (byte) 0x3E, (byte) 0x41, (byte) 0x49, (byte) 0x49, (byte) 0x3A }; // G
		case 'H':
			return new byte[] { (byte) 0x7F, (byte) 0x08, (byte) 0x08, (byte) 0x08, (byte) 0x7F }; // H
		case 'I':
			return new byte[] { (byte) 0x7F }; // I
		case 'J':
			return new byte[] { (byte) 0x21, (byte) 0x41, (byte) 0x41, (byte) 0x41, (byte) 0x3F }; // J
		case 'K':
			return new byte[] { (byte) 0x7F, (byte) 0x08, (byte) 0x14, (byte) 0x22, (byte) 0x41 }; // K
		case 'L':
			return new byte[] { (byte) 0x7F, (byte) 0x40, (byte) 0x40, (byte) 0x40, (byte) 0x40 }; // L
		case 'M':
			return new byte[] { (byte) 0x7F, (byte) 0x02, (byte) 0x1C, (byte) 0x02, (byte) 0x7F }; // M
		case 'N':
			return new byte[] { (byte) 0x7F, (byte) 0x02, (byte) 0x04, (byte) 0x08, (byte) 0x7F }; // N
		case 'O':
			return new byte[] { (byte) 0x3E, (byte) 0x41, (byte) 0x41, (byte) 0x41, (byte) 0x3E }; // O
		case 'P':
			return new byte[] { (byte) 0x7F, (byte) 0x11, (byte) 0x11, (byte) 0x11, (byte) 0x0E }; // P
		case 'Q':
			return new byte[] { (byte) 0x3E, (byte) 0x41, (byte) 0xC1, (byte) 0xA1, (byte) 0xBE }; // Q
		case 'R':
			return new byte[] { (byte) 0x7F, (byte) 0x11, (byte) 0x11, (byte) 0x29, (byte) 0x46 }; // R
		case 'S':
			return new byte[] { (byte) 0x26, (byte) 0x49, (byte) 0x49, (byte) 0x49, (byte) 0x32 }; // S
		case 'T':
			return new byte[] { (byte) 0x01, (byte) 0x01, (byte) 0x7F, (byte) 0x01, (byte) 0x01 }; // T
		case 'U':
			return new byte[] { (byte) 0x3F, (byte) 0x40, (byte) 0x40, (byte) 0x40, (byte) 0x3F }; // U
		case 'V':
			return new byte[] { (byte) 0x07, (byte) 0x18, (byte) 0x60, (byte) 0x18, (byte) 0x07 }; // V
		case 'W':
			return new byte[] { (byte) 0x1F, (byte) 0x60, (byte) 0x18, (byte) 0x60, (byte) 0x1F }; // W
		case 'X':
			return new byte[] { (byte) 0x63, (byte) 0x14, (byte) 0x08, (byte) 0x14, (byte) 0x63 }; // X
		case 'Y':
			return new byte[] { (byte) 0x03, (byte) 0x0C, (byte) 0x70, (byte) 0x0C, (byte) 0x03 }; // Y
		case 'Z':
			return new byte[] { (byte) 0x61, (byte) 0x51, (byte) 0x49, (byte) 0x45, (byte) 0x43 }; // Z
		case '[':
			return new byte[] { (byte) 0x7F, (byte) 0x41, (byte) 0x41 }; // [
		case '\\':
			return new byte[] { (byte) 0x02, (byte) 0x04, (byte) 0x08, (byte) 0x10, (byte) 0x20 }; // BackSlash
		case ']':
			return new byte[] { (byte) 0x41, (byte) 0x41, (byte) 0x7F }; // ]
		case '^':
			return new byte[] { (byte) 0x04, (byte) 0x02, (byte) 0x01, (byte) 0x02, (byte) 0x04 }; // ^
		case '_':
			return new byte[] { (byte) 0x80, (byte) 0x80, (byte) 0x80, (byte) 0x80, (byte) 0x80 }; // _
		case '`':
			return new byte[] { (byte) 0x01, (byte) 0x02 }; // `
		case 'a':
			return new byte[] { (byte) 0x20, (byte) 0x54, (byte) 0x54, (byte) 0x38, (byte) 0x40 }; // a
		case 'b':
			return new byte[] { (byte) 0x3F, (byte) 0x48, (byte) 0x44, (byte) 0x44, (byte) 0x38 }; // b
		case 'c':
			return new byte[] { (byte) 0x38, (byte) 0x44, (byte) 0x44, (byte) 0x44, (byte) 0x28 }; // c
		case 'd':
			return new byte[] { (byte) 0x38, (byte) 0x44, (byte) 0x44, (byte) 0x28, (byte) 0x7F }; // d
		case 'e':
			return new byte[] { (byte) 0x38, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x18 }; // e
		case 'f':
			return new byte[] { (byte) 0x08, (byte) 0x7E, (byte) 0x09, (byte) 0x01 }; // f
		case 'g':
			return new byte[] { (byte) 0x98, (byte) 0xA4, (byte) 0xA4, (byte) 0xA4, (byte) 0x58 }; // g
		case 'h':
			return new byte[] { (byte) 0x7F, (byte) 0x04, (byte) 0x04, (byte) 0x04, (byte) 0x78 }; // h
		case 'i':
			return new byte[] { (byte) 0x7D }; // i
		case 'j':
			return new byte[] { (byte) 0x80, (byte) 0x80, (byte) 0x7D }; // j
		case 'k':
			return new byte[] { (byte) 0x7F, (byte) 0x10, (byte) 0x10, (byte) 0x28, (byte) 0x44 }; // k
		case 'l':
			return new byte[] { (byte) 0x3F, (byte) 0x40, (byte) 0x40 }; // l
		case 'm':
			return new byte[] { (byte) 0x78, (byte) 0x04, (byte) 0x18, (byte) 0x04, (byte) 0x78 }; // m
		case 'n':
			return new byte[] { (byte) 0x7C, (byte) 0x04, (byte) 0x04, (byte) 0x04, (byte) 0x78 }; // n
		case 'o':
			return new byte[] { (byte) 0x38, (byte) 0x44, (byte) 0x44, (byte) 0x44, (byte) 0x38 }; // o
		case 'p':
			return new byte[] { (byte) 0xFC, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0x18 }; // p
		case 'q':
			return new byte[] { (byte) 0x18, (byte) 0x24, (byte) 0x24, (byte) 0x24, (byte) 0xFC }; // q
		case 'r':
			return new byte[] { (byte) 0x7C, (byte) 0x08, (byte) 0x04, (byte) 0x04 }; // r
		case 's':
			return new byte[] { (byte) 0x48, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x24 }; // s
		case 't':
			return new byte[] { (byte) 0x04, (byte) 0x3F, (byte) 0x44, (byte) 0x40 }; // t
		case 'u':
			return new byte[] { (byte) 0x3C, (byte) 0x40, (byte) 0x40, (byte) 0x20, (byte) 0x7C }; // u
		case 'v':
			return new byte[] { (byte) 0x1C, (byte) 0x20, (byte) 0x40, (byte) 0x20, (byte) 0x1C }; // v
		case 'w':
			return new byte[] { (byte) 0x1C, (byte) 0x60, (byte) 0x18, (byte) 0x60, (byte) 0x1C }; // w
		case 'x':
			return new byte[] { (byte) 0x44, (byte) 0x28, (byte) 0x10, (byte) 0x28, (byte) 0x44 }; // x
		case 'y':
			return new byte[] { (byte) 0x9C, (byte) 0xA0, (byte) 0xA0, (byte) 0xA0, (byte) 0x7C }; // y
		case 'z':
			return new byte[] { (byte) 0x64, (byte) 0x54, (byte) 0x54, (byte) 0x54, (byte) 0x4C }; // z
		case '{':
			return new byte[] { (byte) 0x08, (byte) 0x36, (byte) 0x41 }; // {
		case '|':
			return new byte[] { (byte) 0x7F }; // |
		case '}':
			return new byte[] { (byte) 0x41, (byte) 0x36, (byte) 0x08 }; // }
		case '~':
			return new byte[] { (byte) 0x02, (byte) 0x01, (byte) 0x02, (byte) 0x01 }; // ~
		case '':
			return new byte[] { (byte) 0xFF, (byte) 0x81, (byte) 0x81, (byte) 0x81, (byte) 0xFF }; // 
		case 'Ą':
			return new byte[] { (byte) 0x7E, (byte) 0x11, (byte) 0x91, (byte) 0x51, (byte) 0x7E }; // Ą
		case '':
			return new byte[] { (byte) 0x3C, (byte) 0x42, (byte) 0x46, (byte) 0x43, (byte) 0x24 }; // 
		case '‚':
			return new byte[] { (byte) 0x7F, (byte) 0x49, (byte) 0x49, (byte) 0xC1, (byte) 0x81 }; // ‚
		case '':
			return new byte[] { (byte) 0x7F, (byte) 0x48, (byte) 0x44, (byte) 0x42, (byte) 0x40 }; // 
		case '„':
			return new byte[] { (byte) 0x7E, (byte) 0x04, (byte) 0x0A, (byte) 0x11, (byte) 0x7E }; // „
		case '…':
			return new byte[] { (byte) 0x3C, (byte) 0x42, (byte) 0x46, (byte) 0x43, (byte) 0x3C }; // …
		case '†':
			return new byte[] { (byte) 0x24, (byte) 0x4A, (byte) 0x4E, (byte) 0x4B, (byte) 0x32 }; // †
		case '‡':
			return new byte[] { (byte) 0x62, (byte) 0x56, (byte) 0x4B, (byte) 0x4A, (byte) 0x46 }; // ‡
		case '':
			return new byte[] { (byte) 0x69, (byte) 0x59, (byte) 0x49, (byte) 0x4D, (byte) 0x4B }; // 
		case 'ą':
			return new byte[] { (byte) 0x20, (byte) 0x54, (byte) 0x54, (byte) 0xF8, (byte) 0x80 }; // ą
		case 'Š':
			return new byte[] { (byte) 0x38, (byte) 0x44, (byte) 0x46, (byte) 0x45 }; // Š
		case '‹':
			return new byte[] { (byte) 0x38, (byte) 0x54, (byte) 0x54, (byte) 0xD4, (byte) 0x98 }; // ‹
		case 'Ś':
			return new byte[] { (byte) 0x08, (byte) 0x3F, (byte) 0x42, (byte) 0x40 }; // Ś
		case 'Ť':
			return new byte[] { (byte) 0x7C, (byte) 0x04, (byte) 0x06, (byte) 0x05, (byte) 0x78 }; // Ť
		case 'Ž':
			return new byte[] { (byte) 0x38, (byte) 0x44, (byte) 0x46, (byte) 0x45, (byte) 0x38 }; // Ž
		case 'Ź':
			return new byte[] { (byte) 0x48, (byte) 0x54, (byte) 0x56, (byte) 0x55, (byte) 0x24 }; // Ź
		case '':
			return new byte[] { (byte) 0x64, (byte) 0x54, (byte) 0x56, (byte) 0x55, (byte) 0x4C }; // 
		case '‘':
			return new byte[] { (byte) 0x64, (byte) 0x54, (byte) 0x55, (byte) 0x54, (byte) 0x4C }; // ‘
		case 'ä':
		case 'Ä':
			return new byte[] { (byte) 0x20, (byte) 0x55, (byte) 0x54, (byte) 0x39, (byte) 0x40 }; // ä
		case 'ö':
		case 'Ö':
			return new byte[] { (byte) 0x38, (byte) 0x45, (byte) 0x44, (byte) 0x45, (byte) 0x38 }; // ö
		case 'ü':
		case 'Ü':
			return new byte[] { (byte) 0x3C, (byte) 0x41, (byte) 0x40, (byte) 0x21, (byte) 0x7C }; // ü

		default:
			return null;
		}
	}

	/**
	 * @param c
	 * @return
	 */
	private byte[] getChar68(char c) {
		switch (c) {
		case ' ':
			return new byte[] { (byte) 0x00 }; //
		case '!':
			return new byte[] { (byte) 0x5F, (byte) 0x5F }; // !
		case '"':
			return new byte[] { (byte) 0x07, (byte) 0x07, (byte) 0x00, (byte) 0x00, (byte) 0x07, (byte) 0x07 }; // "
		case '#':
			return new byte[] { (byte) 0x14, (byte) 0x7F, (byte) 0x7F, (byte) 0x14, (byte) 0x7F, (byte) 0x7F,
					(byte) 0x14 }; // #
		case '$':
			return new byte[] { (byte) 0x24, (byte) 0x2E, (byte) 0x6B, (byte) 0x6B, (byte) 0x3A, (byte) 0x12 }; // $
		case '%':
			return new byte[] { (byte) 0x63, (byte) 0x73, (byte) 0x18, (byte) 0x0C, (byte) 0x67, (byte) 0x63 }; // %
		case '&':
			return new byte[] { (byte) 0x32, (byte) 0x7F, (byte) 0x4D, (byte) 0x4D, (byte) 0x77, (byte) 0x72,
					(byte) 0x50 }; // &
		case '\'':
			return new byte[] { (byte) 0x06, (byte) 0x09, (byte) 0x09, (byte) 0x06, (byte) 0x00, (byte) 0x00 }; // '
		case '(':
			return new byte[] { (byte) 0x1C, (byte) 0x3E, (byte) 0x63, (byte) 0x41, (byte) 0x00, (byte) 0x00,
					(byte) 0x00 }; // (
		case ')':
			return new byte[] { (byte) 0x41, (byte) 0x63, (byte) 0x3E, (byte) 0x1C }; // )
		case '*':
			return new byte[] { (byte) 0x08, (byte) 0x2A, (byte) 0x3E, (byte) 0x1C, (byte) 0x3E, (byte) 0x2A,
					(byte) 0x08 }; // *
		case '+':
			return new byte[] { (byte) 0x08, (byte) 0x08, (byte) 0x3E, (byte) 0x3E, (byte) 0x08, (byte) 0x08 }; // +
		case ',':
			return new byte[] { (byte) 0x80, (byte) 0xE0, (byte) 0x60 }; // , (byte)
		case '-':
			return new byte[] { (byte) 0x08, (byte) 0x08, (byte) 0x08, (byte) 0x08, (byte) 0x08, (byte) 0x08 }; // -
		case '.':
			return new byte[] { (byte) 0x60, (byte) 0x60 }; // .
		case '/':
			return new byte[] { (byte) 0x40, (byte) 0x60, (byte) 0x30, (byte) 0x18, (byte) 0x0C, (byte) 0x06,
					(byte) 0x02 }; // /
		case '0':
			return new byte[] { (byte) 0x3E, (byte) 0x7F, (byte) 0x49, (byte) 0x45, (byte) 0x7F, (byte) 0x3E }; // 0
		case '1':
			return new byte[] { (byte) 0x40, (byte) 0x44, (byte) 0x7F, (byte) 0x7F, (byte) 0x40, (byte) 0x40 }; // 1
		case '2':
			return new byte[] { (byte) 0x62, (byte) 0x73, (byte) 0x59, (byte) 0x49, (byte) 0x4F, (byte) 0x46 }; // 2
		case '3':
			return new byte[] { (byte) 0x22, (byte) 0x63, (byte) 0x49, (byte) 0x49, (byte) 0x7F, (byte) 0x36 }; // 3
		case '4':
			return new byte[] { (byte) 0x18, (byte) 0x1C, (byte) 0x16, (byte) 0x13, (byte) 0x7F, (byte) 0x7F,
					(byte) 0x10 }; // 4
		case '5':
			return new byte[] { (byte) 0x27, (byte) 0x67, (byte) 0x45, (byte) 0x45, (byte) 0x7D, (byte) 0x39 }; // 5
		case '6':
			return new byte[] { (byte) 0x3E, (byte) 0x7F, (byte) 0x49, (byte) 0x49, (byte) 0x7B, (byte) 0x32 }; // 6
		case '7':
			return new byte[] { (byte) 0x01, (byte) 0x01, (byte) 0x79, (byte) 0x7D, (byte) 0x07, (byte) 0x03 }; // 7
		case '8':
			return new byte[] { (byte) 0x36, (byte) 0x7F, (byte) 0x49, (byte) 0x49, (byte) 0x7F, (byte) 0x36 }; // 8
		case '9':
			return new byte[] { (byte) 0x26, (byte) 0x6F, (byte) 0x49, (byte) 0x49, (byte) 0x7F, (byte) 0x3E }; // 9
		case ':':
			return new byte[] { (byte) 0x24, (byte) 0x24 }; // :
		case ';':
			return new byte[] { (byte) 0x80, (byte) 0xC4, (byte) 0x44 }; // ;
		case '<':
			return new byte[] { (byte) 0x08, (byte) 0x1C, (byte) 0x36, (byte) 0x63, (byte) 0x41, (byte) 0x41 }; // <
		case '=':
			return new byte[] { (byte) 0x14, (byte) 0x14, (byte) 0x14, (byte) 0x14, (byte) 0x14, (byte) 0x14 }; // =
		case '>':
			return new byte[] { (byte) 0x41, (byte) 0x41, (byte) 0x63, (byte) 0x36, (byte) 0x1C, (byte) 0x08 }; // >
		case '?':
			return new byte[] { (byte) 0x02, (byte) 0x03, (byte) 0x51, (byte) 0x59, (byte) 0x0F, (byte) 0x06 }; // ?
		case '@':
			return new byte[] { (byte) 0x3E, (byte) 0x7F, (byte) 0x41, (byte) 0x4D, (byte) 0x6F, (byte) 0x2E }; // @
		case 'A':
			return new byte[] { (byte) 0x7C, (byte) 0x7E, (byte) 0x13, (byte) 0x13, (byte) 0x7E, (byte) 0x7C }; // A
		case 'B':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x49, (byte) 0x49, (byte) 0x7F, (byte) 0x36 }; // B
		case 'C':
			return new byte[] { (byte) 0x3E, (byte) 0x7F, (byte) 0x41, (byte) 0x41, (byte) 0x63, (byte) 0x22 }; // C
		case 'D':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x41, (byte) 0x41, (byte) 0x7F, (byte) 0x3E }; // D
		case 'E':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x49, (byte) 0x49, (byte) 0x41, (byte) 0x41 }; // E
		case 'F':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x09, (byte) 0x09, (byte) 0x01, (byte) 0x01 }; // F
		case 'G':
			return new byte[] { (byte) 0x3E, (byte) 0x7F, (byte) 0x41, (byte) 0x49, (byte) 0x7B, (byte) 0x3A }; // G
		case 'H':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x08, (byte) 0x08, (byte) 0x7F, (byte) 0x7F }; // H
		case 'I':
			return new byte[] { (byte) 0x41, (byte) 0x7F, (byte) 0x7F, (byte) 0x41 }; // I
		case 'J':
			return new byte[] { (byte) 0x20, (byte) 0x60, (byte) 0x41, (byte) 0x7F, (byte) 0x3F, (byte) 0x01 }; // J
		case 'K':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x1C, (byte) 0x36, (byte) 0x63, (byte) 0x41 }; // K
		case 'L':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x40, (byte) 0x40, (byte) 0x40, (byte) 0x40 }; // L
		case 'M':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x06, (byte) 0x0C, (byte) 0x06, (byte) 0x7F,
					(byte) 0x7F }; // M
		case 'N':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x0C, (byte) 0x18, (byte) 0x7F, (byte) 0x7F }; // N
		case 'O':
			return new byte[] { (byte) 0x3E, (byte) 0x7F, (byte) 0x41, (byte) 0x41, (byte) 0x7F, (byte) 0x3E }; // O
		case 'P':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x09, (byte) 0x09, (byte) 0x0F, (byte) 0x06 }; // P
		case 'Q':
			return new byte[] { (byte) 0x1E, (byte) 0x3F, (byte) 0x21, (byte) 0x61, (byte) 0x7F, (byte) 0x5E }; // Q
		case 'R':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x19, (byte) 0x39, (byte) 0x6F, (byte) 0x46 }; // R
		case 'S':
			return new byte[] { (byte) 0x26, (byte) 0x6F, (byte) 0x49, (byte) 0x49, (byte) 0x7B, (byte) 0x32 }; // S
		case 'T':
			return new byte[] { (byte) 0x01, (byte) 0x01, (byte) 0x7F, (byte) 0x7F, (byte) 0x01, (byte) 0x01 }; // T
		case 'U':
			return new byte[] { (byte) 0x3F, (byte) 0x7F, (byte) 0x40, (byte) 0x40, (byte) 0x7F, (byte) 0x3F }; // U
		case 'V':
			return new byte[] { (byte) 0x1F, (byte) 0x3F, (byte) 0x60, (byte) 0x60, (byte) 0x3F, (byte) 0x1F }; // V
		case 'W':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x30, (byte) 0x18, (byte) 0x30, (byte) 0x7F,
					(byte) 0x7F }; // W
		case 'X':
			return new byte[] { (byte) 0x41, (byte) 0x63, (byte) 0x3E, (byte) 0x3E, (byte) 0x63, (byte) 0x41 }; // X
		case 'Y':
			return new byte[] { (byte) 0x07, (byte) 0x0F, (byte) 0x78, (byte) 0x78, (byte) 0x0F, (byte) 0x07 }; // Y
		case 'Z':
			return new byte[] { (byte) 0x61, (byte) 0x71, (byte) 0x59, (byte) 0x4D, (byte) 0x47, (byte) 0x43 }; // Z
		case '[':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x41, (byte) 0x41 }; // [
		case '\\':
			return new byte[] { (byte) 0x02, (byte) 0x06, (byte) 0x0C, (byte) 0x18, (byte) 0x30, (byte) 0x60,
					(byte) 0x40 }; // BackSlash
		case ']':
			return new byte[] { (byte) 0x41, (byte) 0x41, (byte) 0x7F, (byte) 0x7F }; // ]
		case '^':
			return new byte[] { (byte) 0x08, (byte) 0x0C, (byte) 0xFE, (byte) 0xFE, (byte) 0x0C, (byte) 0x08 }; // ^
		case '_':
			return new byte[] { (byte) 0x80, (byte) 0x80, (byte) 0x80, (byte) 0x80, (byte) 0x80, (byte) 0x80,
					(byte) 0x80 }; // _
		case '`':
			return new byte[] { (byte) 0x1C, (byte) 0x3E, (byte) 0x63, (byte) 0x41, (byte) 0x63, (byte) 0x14,
					(byte) 0x14 }; // `
		case 'a':
			return new byte[] { (byte) 0x20, (byte) 0x74, (byte) 0x54, (byte) 0x54, (byte) 0x7C, (byte) 0x78 }; // a
		case 'b':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x44, (byte) 0x44, (byte) 0x7C, (byte) 0x38 }; // b
		case 'c':
			return new byte[] { (byte) 0x38, (byte) 0x7C, (byte) 0x44, (byte) 0x44, (byte) 0x44 }; // c
		case 'd':
			return new byte[] { (byte) 0x38, (byte) 0x7C, (byte) 0x44, (byte) 0x44, (byte) 0x7F, (byte) 0x7F }; // d
		case 'e':
			return new byte[] { (byte) 0x38, (byte) 0x7C, (byte) 0x54, (byte) 0x54, (byte) 0x5C, (byte) 0x18 }; // e
		case 'f':
			return new byte[] { (byte) 0x08, (byte) 0x7E, (byte) 0x7F, (byte) 0x09, (byte) 0x09 }; // f
		case 'g':
			return new byte[] { (byte) 0x98, (byte) 0xBC, (byte) 0xA4, (byte) 0xA4, (byte) 0xFC, (byte) 0x7C }; // g
		case 'h':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x04, (byte) 0x04, (byte) 0x7C, (byte) 0x78 }; // h
		case 'i':
			return new byte[] { (byte) 0x44, (byte) 0x7D, (byte) 0x7D, (byte) 0x40 }; // i
		case 'j':
			return new byte[] { (byte) 0x80, (byte) 0x80, (byte) 0x80, (byte) 0xFD, (byte) 0x7D }; // j
		case 'k':
			return new byte[] { (byte) 0x7F, (byte) 0x7F, (byte) 0x10, (byte) 0x38, (byte) 0x6C, (byte) 0x44 }; // k
		case 'l':
			return new byte[] { (byte) 0x41, (byte) 0x7F, (byte) 0x7F, (byte) 0x40 }; // l
		case 'm':
			return new byte[] { (byte) 0x78, (byte) 0x7C, (byte) 0x0C, (byte) 0x38, (byte) 0x0C, (byte) 0x7C,
					(byte) 0x78 }; // m
		case 'n':
			return new byte[] { (byte) 0x7C, (byte) 0x7C, (byte) 0x04, (byte) 0x04, (byte) 0x7C, (byte) 0x78 }; // n
		case 'o':
			return new byte[] { (byte) 0x38, (byte) 0x7C, (byte) 0x44, (byte) 0x44, (byte) 0x7C, (byte) 0x38 }; // o
		case 'p':
			return new byte[] { (byte) 0xFC, (byte) 0xFC, (byte) 0x24, (byte) 0x24, (byte) 0x3C, (byte) 0x18 }; // p
		case 'q':
			return new byte[] { (byte) 0x18, (byte) 0x3C, (byte) 0x24, (byte) 0x24, (byte) 0xFC, (byte) 0xFC }; // q
		case 'r':
			return new byte[] { (byte) 0x7C, (byte) 0x7C, (byte) 0x04, (byte) 0x04, (byte) 0x0C, (byte) 0x08 }; // r
		case 's':
			return new byte[] { (byte) 0x48, (byte) 0x5C, (byte) 0x54, (byte) 0x54, (byte) 0x74, (byte) 0x24 }; // s
		case 't':
			return new byte[] { (byte) 0x04, (byte) 0x3F, (byte) 0x7F, (byte) 0x44, (byte) 0x44 }; // t
		case 'u':
			return new byte[] { (byte) 0x3C, (byte) 0x7C, (byte) 0x40, (byte) 0x40, (byte) 0x7C, (byte) 0x7C }; // u
		case 'v':
			return new byte[] { (byte) 0x1C, (byte) 0x3C, (byte) 0x60, (byte) 0x60, (byte) 0x3C, (byte) 0x1C }; // v
		case 'w':
			return new byte[] { (byte) 0x1C, (byte) 0x7C, (byte) 0x60, (byte) 0x38, (byte) 0x60, (byte) 0x7C,
					(byte) 0x1C }; // w
		case 'x':
			return new byte[] { (byte) 0x44, (byte) 0x6C, (byte) 0x38, (byte) 0x38, (byte) 0x6C, (byte) 0x44 }; // x
		case 'y':
			return new byte[] { (byte) 0x9C, (byte) 0xBC, (byte) 0xA0, (byte) 0xE0, (byte) 0x7C, (byte) 0x3C }; // y
		case 'z':
			return new byte[] { (byte) 0x44, (byte) 0x64, (byte) 0x74, (byte) 0x5C, (byte) 0x4C, (byte) 0x44 }; // z
		case '{':
			return new byte[] { (byte) 0x08, (byte) 0x3E, (byte) 0x7F, (byte) 0x41, (byte) 0x41 }; // {
		case '|':
			return new byte[] { (byte) 0xFF, (byte) 0xFF }; // |
		case '}':
			return new byte[] { (byte) 0x41, (byte) 0x41, (byte) 0x7F, (byte) 0x3E, (byte) 0x08 }; // }
		case '~':
			return new byte[] { (byte) 0x10, (byte) 0x18, (byte) 0x18, (byte) 0x18, (byte) 0x08 }; // ~
		default:
			return null;
		}
	}

//	public byte[] getFont2432(char c) { TODO
//		switch (c) {
//		case ' ':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; //
//		case '!':
//			return new byte[] { (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xFC, (byte) 0xDF,
//					(byte) 0x00, (byte) 0x04, (byte) 0x50, (byte) 0x01, (byte) 0xFC, (byte) 0x9F, (byte) 0x01,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // !
//		case '"':
//			return new byte[] { (byte) 0x07, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xFC, (byte) 0x00,
//					(byte) 0x00, (byte) 0xFC, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xFC, (byte) 0x00, (byte) 0x00, (byte) 0xFC,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // "
//		case '#':
//			return new byte[] { (byte) 0x0F, (byte) 0x00, (byte) 0x1C, (byte) 0x00, (byte) 0x38, (byte) 0xD4,
//					(byte) 0x01, (byte) 0x28, (byte) 0x24, (byte) 0x01, (byte) 0xA8, (byte) 0x83, (byte) 0x01,
//					(byte) 0x48, (byte) 0x60, (byte) 0x00, (byte) 0x07, (byte) 0x13, (byte) 0x00, (byte) 0xC1,
//					(byte) 0x14, (byte) 0x00, (byte) 0x27, (byte) 0xE4, (byte) 0x01, (byte) 0x28, (byte) 0xC3,
//					(byte) 0x01, (byte) 0xC8, (byte) 0x20, (byte) 0x00, (byte) 0x87, (byte) 0x13, (byte) 0x00,
//					(byte) 0x41, (byte) 0x14, (byte) 0x00, (byte) 0x27, (byte) 0x14, (byte) 0x00, (byte) 0x28,
//					(byte) 0x1C, (byte) 0x00, (byte) 0x38, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // #
//		case '$':
//			return new byte[] { (byte) 0x0D, (byte) 0xC0, (byte) 0xC1, (byte) 0x01, (byte) 0x20, (byte) 0x42,
//					(byte) 0x02, (byte) 0x90, (byte) 0x44, (byte) 0x02, (byte) 0x50, (byte) 0x85, (byte) 0x02,
//					(byte) 0x28, (byte) 0x85, (byte) 0x02, (byte) 0xC6, (byte) 0x78, (byte) 0x1C, (byte) 0x02,
//					(byte) 0x00, (byte) 0x10, (byte) 0xC6, (byte) 0x78, (byte) 0x1C, (byte) 0x28, (byte) 0x85,
//					(byte) 0x02, (byte) 0x28, (byte) 0x49, (byte) 0x02, (byte) 0x30, (byte) 0x32, (byte) 0x01,
//					(byte) 0x30, (byte) 0x86, (byte) 0x00, (byte) 0x00, (byte) 0x78, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // $
//		case '%':
//			return new byte[] { (byte) 0x0F, (byte) 0xE0, (byte) 0x00, (byte) 0x00, (byte) 0x10, (byte) 0x01,
//					(byte) 0x00, (byte) 0x48, (byte) 0x02, (byte) 0x00, (byte) 0xA8, (byte) 0x82, (byte) 0x01,
//					(byte) 0x48, (byte) 0x62, (byte) 0x01, (byte) 0x10, (byte) 0xD9, (byte) 0x00, (byte) 0xE0,
//					(byte) 0x36, (byte) 0x00, (byte) 0x00, (byte) 0x09, (byte) 0x00, (byte) 0xC0, (byte) 0xF6,
//					(byte) 0x00, (byte) 0xB0, (byte) 0x09, (byte) 0x01, (byte) 0x68, (byte) 0x24, (byte) 0x01,
//					(byte) 0x18, (byte) 0x54, (byte) 0x01, (byte) 0x00, (byte) 0x24, (byte) 0x01, (byte) 0x00,
//					(byte) 0x88, (byte) 0x00, (byte) 0x00, (byte) 0x70, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // %
//		case '&':
//			return new byte[] { (byte) 0x0C, (byte) 0x00, (byte) 0x78, (byte) 0x00, (byte) 0x00, (byte) 0x84,
//					(byte) 0x00, (byte) 0x00, (byte) 0x3A, (byte) 0x01, (byte) 0xE0, (byte) 0x45, (byte) 0x01,
//					(byte) 0x10, (byte) 0x42, (byte) 0x01, (byte) 0x48, (byte) 0x44, (byte) 0x01, (byte) 0xA8,
//					(byte) 0x58, (byte) 0x01, (byte) 0x48, (byte) 0xA1, (byte) 0x00, (byte) 0x88, (byte) 0x82,
//					(byte) 0x00, (byte) 0x70, (byte) 0x22, (byte) 0x01, (byte) 0x00, (byte) 0x5E, (byte) 0x01,
//					(byte) 0x00, (byte) 0x80, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // &
//		case '\'':
//			return new byte[] { (byte) 0x05, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xFC, (byte) 0x00, (byte) 0x00,
//					(byte) 0xFC, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // '
//		case '(':
//			return new byte[] { (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xFE,
//					(byte) 0x00, (byte) 0xC0, (byte) 0x01, (byte) 0x07, (byte) 0x30, (byte) 0xFE, (byte) 0x08,
//					(byte) 0xC8, (byte) 0x01, (byte) 0x13, (byte) 0x24, (byte) 0x00, (byte) 0x24, (byte) 0x14,
//					(byte) 0x00, (byte) 0x28, (byte) 0x0C, (byte) 0x00, (byte) 0x30, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // (
//		case ')':
//			return new byte[] { (byte) 0x06, (byte) 0x1C, (byte) 0x00, (byte) 0x38, (byte) 0x24, (byte) 0x00,
//					(byte) 0x24, (byte) 0xC8, (byte) 0x01, (byte) 0x13, (byte) 0x30, (byte) 0xFE, (byte) 0x08,
//					(byte) 0xC0, (byte) 0x01, (byte) 0x07, (byte) 0x00, (byte) 0xFE, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // )
//		case '*':
//			return new byte[] { (byte) 0x09, (byte) 0x30, (byte) 0x03, (byte) 0x00, (byte) 0xD0, (byte) 0x02,
//					(byte) 0x00, (byte) 0x10, (byte) 0x01, (byte) 0x00, (byte) 0x0C, (byte) 0x01, (byte) 0x00,
//					(byte) 0x0C, (byte) 0x01, (byte) 0x00, (byte) 0x10, (byte) 0x02, (byte) 0x00, (byte) 0xD0,
//					(byte) 0x02, (byte) 0x00, (byte) 0x30, (byte) 0x03, (byte) 0x00, (byte) 0x30, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // *
//		case '+':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00,
//					(byte) 0x00, (byte) 0x0C, (byte) 0x00, (byte) 0x80, (byte) 0x73, (byte) 0x00, (byte) 0x80,
//					(byte) 0x73, (byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x0C,
//					(byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // +
//		case ',':
//			return new byte[] { (byte) 0x06, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x16,
//					(byte) 0x00, (byte) 0x00, (byte) 0x0D, (byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // ,
//		case '-':
//			return new byte[] { (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x18, (byte) 0x00,
//					(byte) 0x00, (byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x18, (byte) 0x00, (byte) 0x00,
//					(byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // -
//		case '.':
//			return new byte[] { (byte) 0x05, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x03,
//					(byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // .
//		case '/':
//			return new byte[] { (byte) 0x09, (byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0x00, (byte) 0xC0,
//					(byte) 0x02, (byte) 0x00, (byte) 0xB0, (byte) 0x01, (byte) 0x00, (byte) 0x6C, (byte) 0x00,
//					(byte) 0x00, (byte) 0x1B, (byte) 0x00, (byte) 0xC0, (byte) 0x04, (byte) 0x00, (byte) 0x30,
//					(byte) 0x03, (byte) 0x00, (byte) 0xE8, (byte) 0x00, (byte) 0x00, (byte) 0x18, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // /
//		case '0':
//			return new byte[] { (byte) 0x0B, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x80, (byte) 0x3F,
//					(byte) 0x00, (byte) 0x60, (byte) 0xC0, (byte) 0x00, (byte) 0x90, (byte) 0x3F, (byte) 0x01,
//					(byte) 0x48, (byte) 0x40, (byte) 0x02, (byte) 0x28, (byte) 0x80, (byte) 0x02, (byte) 0x28,
//					(byte) 0x80, (byte) 0x02, (byte) 0x48, (byte) 0x40, (byte) 0x02, (byte) 0x90, (byte) 0x3F,
//					(byte) 0x01, (byte) 0x20, (byte) 0xC0, (byte) 0x00, (byte) 0xC0, (byte) 0x3F, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // 0
//		case '1':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x60, (byte) 0xC0,
//					(byte) 0x01, (byte) 0x60, (byte) 0x40, (byte) 0x01, (byte) 0x50, (byte) 0x40, (byte) 0x01,
//					(byte) 0x88, (byte) 0x3F, (byte) 0x01, (byte) 0x08, (byte) 0x00, (byte) 0x01, (byte) 0xF8,
//					(byte) 0x3F, (byte) 0x01, (byte) 0x00, (byte) 0x40, (byte) 0x01, (byte) 0x00, (byte) 0x40,
//					(byte) 0x01, (byte) 0x00, (byte) 0xC0, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // 1
//		case '2':
//			return new byte[] { (byte) 0x0B, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xC0, (byte) 0xE0,
//					(byte) 0x01, (byte) 0xA0, (byte) 0x18, (byte) 0x01, (byte) 0x50, (byte) 0x28, (byte) 0x01,
//					(byte) 0x48, (byte) 0x54, (byte) 0x01, (byte) 0x28, (byte) 0x4C, (byte) 0x01, (byte) 0x28,
//					(byte) 0x46, (byte) 0x01, (byte) 0x28, (byte) 0x45, (byte) 0x01, (byte) 0xC8, (byte) 0x42,
//					(byte) 0x01, (byte) 0x10, (byte) 0x43, (byte) 0x01, (byte) 0xE0, (byte) 0x80, (byte) 0x01,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // 2
//		case '3':
//			return new byte[] { (byte) 0x0B, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x60, (byte) 0xE0, (byte) 0x00, (byte) 0x50, (byte) 0x20, (byte) 0x01,
//					(byte) 0x28, (byte) 0x47, (byte) 0x02, (byte) 0x28, (byte) 0x85, (byte) 0x02, (byte) 0x28,
//					(byte) 0x85, (byte) 0x02, (byte) 0xA8, (byte) 0x48, (byte) 0x02, (byte) 0x48, (byte) 0x30,
//					(byte) 0x02, (byte) 0x10, (byte) 0x06, (byte) 0x01, (byte) 0xE0, (byte) 0xF9, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // 3
//		case '4':
//			return new byte[] { (byte) 0x0C, (byte) 0x00, (byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x14,
//					(byte) 0x00, (byte) 0x00, (byte) 0x12, (byte) 0x00, (byte) 0x00, (byte) 0x13, (byte) 0x00,
//					(byte) 0x80, (byte) 0x15, (byte) 0x00, (byte) 0xC0, (byte) 0x14, (byte) 0x00, (byte) 0x70,
//					(byte) 0x14, (byte) 0x00, (byte) 0x88, (byte) 0xE3, (byte) 0x01, (byte) 0x08, (byte) 0x00,
//					(byte) 0x02, (byte) 0xF8, (byte) 0xE3, (byte) 0x01, (byte) 0x00, (byte) 0x14, (byte) 0x00,
//					(byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // 4
//		case '5':
//			return new byte[] { (byte) 0x0B, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF8, (byte) 0xE7,
//					(byte) 0x00, (byte) 0x08, (byte) 0x24, (byte) 0x01, (byte) 0x48, (byte) 0x44, (byte) 0x02,
//					(byte) 0xA8, (byte) 0x82, (byte) 0x02, (byte) 0xA8, (byte) 0x82, (byte) 0x02, (byte) 0xA8,
//					(byte) 0x82, (byte) 0x02, (byte) 0xA8, (byte) 0x42, (byte) 0x02, (byte) 0xA8, (byte) 0x3C,
//					(byte) 0x01, (byte) 0x28, (byte) 0x81, (byte) 0x00, (byte) 0x18, (byte) 0x7E, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // 5
//		case '6':
//			return new byte[] { (byte) 0x0B, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x7E,
//					(byte) 0x00, (byte) 0x80, (byte) 0x81, (byte) 0x01, (byte) 0x40, (byte) 0x38, (byte) 0x01,
//					(byte) 0xA0, (byte) 0x44, (byte) 0x02, (byte) 0x58, (byte) 0x85, (byte) 0x02, (byte) 0x28,
//					(byte) 0x85, (byte) 0x02, (byte) 0x28, (byte) 0x45, (byte) 0x02, (byte) 0x18, (byte) 0x39,
//					(byte) 0x01, (byte) 0x00, (byte) 0x82, (byte) 0x01, (byte) 0x00, (byte) 0x7C, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // 6
//		case '7':
//			return new byte[] { (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x38, (byte) 0x00,
//					(byte) 0x00, (byte) 0x28, (byte) 0x00, (byte) 0x00, (byte) 0x28, (byte) 0xC0, (byte) 0x01,
//					(byte) 0x28, (byte) 0x30, (byte) 0x01, (byte) 0x28, (byte) 0x8C, (byte) 0x01, (byte) 0x28,
//					(byte) 0x73, (byte) 0x00, (byte) 0xA8, (byte) 0x0C, (byte) 0x00, (byte) 0x48, (byte) 0x03,
//					(byte) 0x00, (byte) 0xC8, (byte) 0x00, (byte) 0x00, (byte) 0x28, (byte) 0x00, (byte) 0x00,
//					(byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // 7
//		case '8':
//			return new byte[] { (byte) 0x0B, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF8,
//					(byte) 0x00, (byte) 0xE0, (byte) 0x05, (byte) 0x01, (byte) 0x10, (byte) 0x72, (byte) 0x02,
//					(byte) 0xC8, (byte) 0x88, (byte) 0x02, (byte) 0x28, (byte) 0x85, (byte) 0x02, (byte) 0x28,
//					(byte) 0x85, (byte) 0x02, (byte) 0xC8, (byte) 0x88, (byte) 0x02, (byte) 0x10, (byte) 0x72,
//					(byte) 0x01, (byte) 0xE0, (byte) 0x05, (byte) 0x01, (byte) 0x00, (byte) 0xF8, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // 8
//		case '9':
//			return new byte[] { (byte) 0x0B, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xE0, (byte) 0x03,
//					(byte) 0x00, (byte) 0x10, (byte) 0x84, (byte) 0x01, (byte) 0xD0, (byte) 0x89, (byte) 0x01,
//					(byte) 0x28, (byte) 0x4A, (byte) 0x01, (byte) 0x28, (byte) 0xCA, (byte) 0x00, (byte) 0x28,
//					(byte) 0xAA, (byte) 0x00, (byte) 0x48, (byte) 0x52, (byte) 0x00, (byte) 0x90, (byte) 0x21,
//					(byte) 0x00, (byte) 0x30, (byte) 0x18, (byte) 0x00, (byte) 0xC0, (byte) 0x07, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // 9
//		case ':':
//			return new byte[] { (byte) 0x06, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x80, (byte) 0xE3, (byte) 0x00,
//					(byte) 0x80, (byte) 0xA2, (byte) 0x00, (byte) 0x80, (byte) 0xE3, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // :
//		case ';':
//			return new byte[] { (byte) 0x06, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x06, (byte) 0x80, (byte) 0x03, (byte) 0x05,
//					(byte) 0x80, (byte) 0x82, (byte) 0x02, (byte) 0x80, (byte) 0x83, (byte) 0x01, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // ;
//		case '<':
//			return new byte[] { (byte) 0x09, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00,
//					(byte) 0x00, (byte) 0x12, (byte) 0x00, (byte) 0x00, (byte) 0x29, (byte) 0x00, (byte) 0x00,
//					(byte) 0x55, (byte) 0x00, (byte) 0x80, (byte) 0x62, (byte) 0x00, (byte) 0x80, (byte) 0x61,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // <
//		case '=':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x33, (byte) 0x00, (byte) 0x00, (byte) 0x33, (byte) 0x00,
//					(byte) 0x00, (byte) 0x33, (byte) 0x00, (byte) 0x00, (byte) 0x33, (byte) 0x00, (byte) 0x00,
//					(byte) 0x33, (byte) 0x00, (byte) 0x00, (byte) 0x33, (byte) 0x00, (byte) 0x00, (byte) 0x33,
//					(byte) 0x00, (byte) 0x00, (byte) 0x33, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // =
//		case '>':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x80, (byte) 0xC1, (byte) 0x00, (byte) 0x80, (byte) 0xA2, (byte) 0x00, (byte) 0x00,
//					(byte) 0x55, (byte) 0x00, (byte) 0x00, (byte) 0x2A, (byte) 0x00, (byte) 0x00, (byte) 0x14,
//					(byte) 0x00, (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // >
//		case '?':
//			return new byte[] { (byte) 0x0A, (byte) 0x60, (byte) 0x00, (byte) 0x00, (byte) 0x50, (byte) 0x80,
//					(byte) 0x01, (byte) 0x48, (byte) 0x58, (byte) 0x01, (byte) 0x28, (byte) 0xD4, (byte) 0x01,
//					(byte) 0x28, (byte) 0x14, (byte) 0x00, (byte) 0x28, (byte) 0x0A, (byte) 0x00, (byte) 0x48,
//					(byte) 0x06, (byte) 0x00, (byte) 0x90, (byte) 0x05, (byte) 0x00, (byte) 0x20, (byte) 0x02,
//					(byte) 0x00, (byte) 0xC0, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // ?
//		case '@':
//			return new byte[] { (byte) 0x12, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x80, (byte) 0x1F,
//					(byte) 0x00, (byte) 0x60, (byte) 0x60, (byte) 0x00, (byte) 0x10, (byte) 0x8F, (byte) 0x00,
//					(byte) 0xC8, (byte) 0xB0, (byte) 0x00, (byte) 0x28, (byte) 0x47, (byte) 0x01, (byte) 0xA4,
//					(byte) 0x48, (byte) 0x01, (byte) 0x94, (byte) 0x89, (byte) 0x02, (byte) 0xD4, (byte) 0x8A,
//					(byte) 0x02, (byte) 0x54, (byte) 0x8A, (byte) 0x02, (byte) 0x54, (byte) 0x85, (byte) 0x02,
//					(byte) 0x14, (byte) 0x89, (byte) 0x02, (byte) 0x14, (byte) 0x4A, (byte) 0x01, (byte) 0x28,
//					(byte) 0x4A, (byte) 0x01, (byte) 0x48, (byte) 0x8A, (byte) 0x00, (byte) 0x90, (byte) 0x09,
//					(byte) 0x00, (byte) 0x20, (byte) 0x04, (byte) 0x00, (byte) 0xC0, (byte) 0x03, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // @
//		case 'A':
//			return new byte[] { (byte) 0x0D, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x80,
//					(byte) 0x03, (byte) 0x00, (byte) 0x70, (byte) 0x03, (byte) 0x00, (byte) 0xC8, (byte) 0x00,
//					(byte) 0x00, (byte) 0x26, (byte) 0x00, (byte) 0x80, (byte) 0x25, (byte) 0x00, (byte) 0x40,
//					(byte) 0x2B, (byte) 0x00, (byte) 0xB0, (byte) 0x28, (byte) 0x00, (byte) 0x08, (byte) 0x27,
//					(byte) 0x00, (byte) 0x78, (byte) 0x40, (byte) 0x00, (byte) 0x80, (byte) 0x87, (byte) 0x01,
//					(byte) 0x00, (byte) 0x78, (byte) 0x02, (byte) 0x00, (byte) 0x80, (byte) 0x03, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // A
//		case 'B':
//			return new byte[] { (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF0, (byte) 0xFF,
//					(byte) 0x03, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0xC8, (byte) 0x78, (byte) 0x02,
//					(byte) 0x28, (byte) 0x85, (byte) 0x02, (byte) 0x28, (byte) 0x85, (byte) 0x02, (byte) 0x28,
//					(byte) 0x85, (byte) 0x02, (byte) 0x28, (byte) 0x45, (byte) 0x01, (byte) 0xD0, (byte) 0x48,
//					(byte) 0x01, (byte) 0x10, (byte) 0x33, (byte) 0x01, (byte) 0xE0, (byte) 0x84, (byte) 0x00,
//					(byte) 0x00, (byte) 0x78, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // B
//		case 'C':
//			return new byte[] { (byte) 0x0B, (byte) 0x00, (byte) 0x7C, (byte) 0x00, (byte) 0x00, (byte) 0x83,
//					(byte) 0x00, (byte) 0xC0, (byte) 0x3C, (byte) 0x01, (byte) 0x20, (byte) 0x42, (byte) 0x02,
//					(byte) 0x90, (byte) 0x81, (byte) 0x02, (byte) 0x48, (byte) 0x80, (byte) 0x02, (byte) 0x28,
//					(byte) 0x80, (byte) 0x02, (byte) 0x28, (byte) 0x40, (byte) 0x02, (byte) 0x28, (byte) 0x40,
//					(byte) 0x01, (byte) 0x48, (byte) 0xA0, (byte) 0x00, (byte) 0x78, (byte) 0xE0, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // C
//		case 'D':
//			return new byte[] { (byte) 0x0D, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF8, (byte) 0xFF,
//					(byte) 0x01, (byte) 0x08, (byte) 0x00, (byte) 0x01, (byte) 0xC8, (byte) 0x7F, (byte) 0x02,
//					(byte) 0x30, (byte) 0x80, (byte) 0x02, (byte) 0x50, (byte) 0x80, (byte) 0x02, (byte) 0x60,
//					(byte) 0x80, (byte) 0x02, (byte) 0xA0, (byte) 0x80, (byte) 0x02, (byte) 0xA0, (byte) 0x40,
//					(byte) 0x02, (byte) 0x40, (byte) 0x23, (byte) 0x01, (byte) 0x80, (byte) 0x1C, (byte) 0x01,
//					(byte) 0x00, (byte) 0xC1, (byte) 0x00, (byte) 0x00, (byte) 0x3E, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // D
//		case 'E':
//			return new byte[] { (byte) 0x0B, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF8, (byte) 0xFF,
//					(byte) 0x01, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0xC8, (byte) 0x71, (byte) 0x02,
//					(byte) 0x28, (byte) 0x8A, (byte) 0x02, (byte) 0x28, (byte) 0x8A, (byte) 0x02, (byte) 0x28,
//					(byte) 0x8A, (byte) 0x02, (byte) 0x28, (byte) 0x8A, (byte) 0x02, (byte) 0x28, (byte) 0x8A,
//					(byte) 0x02, (byte) 0x28, (byte) 0x8A, (byte) 0x02, (byte) 0x10, (byte) 0x04, (byte) 0x01,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // E
//		case 'F':
//			return new byte[] { (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF8, (byte) 0xFF,
//					(byte) 0x01, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0xC8, (byte) 0xF8, (byte) 0x01,
//					(byte) 0x28, (byte) 0x05, (byte) 0x00, (byte) 0x28, (byte) 0x05, (byte) 0x00, (byte) 0x28,
//					(byte) 0x05, (byte) 0x00, (byte) 0x28, (byte) 0x05, (byte) 0x00, (byte) 0x28, (byte) 0x05,
//					(byte) 0x00, (byte) 0x28, (byte) 0x05, (byte) 0x00, (byte) 0x28, (byte) 0x02, (byte) 0x00,
//					(byte) 0x10, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // F
//		case 'G':
//			return new byte[] { (byte) 0x0D, (byte) 0x00, (byte) 0xFC, (byte) 0x00, (byte) 0x00, (byte) 0x03,
//					(byte) 0x01, (byte) 0xC0, (byte) 0x7C, (byte) 0x02, (byte) 0x20, (byte) 0x83, (byte) 0x02,
//					(byte) 0x90, (byte) 0x8C, (byte) 0x02, (byte) 0x48, (byte) 0x8C, (byte) 0x02, (byte) 0x28,
//					(byte) 0x8A, (byte) 0x02, (byte) 0x28, (byte) 0x4A, (byte) 0x01, (byte) 0x28, (byte) 0x2A,
//					(byte) 0x01, (byte) 0x48, (byte) 0x92, (byte) 0x00, (byte) 0x50, (byte) 0x62, (byte) 0x00,
//					(byte) 0x60, (byte) 0x1A, (byte) 0x00, (byte) 0x00, (byte) 0x06, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // G
//		case 'H':
//			return new byte[] { (byte) 0x0E, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF0, (byte) 0xFF,
//					(byte) 0x01, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0xF0, (byte) 0xF1, (byte) 0x01,
//					(byte) 0x00, (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x0A, (byte) 0x00, (byte) 0x00,
//					(byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x0A,
//					(byte) 0x00, (byte) 0x00, (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x0A, (byte) 0x00,
//					(byte) 0xF0, (byte) 0xF1, (byte) 0x01, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0xF0,
//					(byte) 0xFF, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // H
//		case 'I':
//			return new byte[] { (byte) 0x09, (byte) 0x10, (byte) 0x00, (byte) 0x01, (byte) 0x28, (byte) 0x80,
//					(byte) 0x02, (byte) 0x28, (byte) 0x80, (byte) 0x02, (byte) 0xC8, (byte) 0x7F, (byte) 0x02,
//					(byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0xC8, (byte) 0x7F, (byte) 0x02, (byte) 0x28,
//					(byte) 0x80, (byte) 0x02, (byte) 0x28, (byte) 0x80, (byte) 0x02, (byte) 0x10, (byte) 0x00,
//					(byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // I
//		case 'J':
//			return new byte[] { (byte) 0x0C, (byte) 0x00, (byte) 0x60, (byte) 0x00, (byte) 0x00, (byte) 0x90,
//					(byte) 0x00, (byte) 0x10, (byte) 0x20, (byte) 0x01, (byte) 0x28, (byte) 0x40, (byte) 0x01,
//					(byte) 0x28, (byte) 0x80, (byte) 0x02, (byte) 0x28, (byte) 0x80, (byte) 0x02, (byte) 0xC8,
//					(byte) 0x7F, (byte) 0x02, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0xC8, (byte) 0xFF,
//					(byte) 0x01, (byte) 0x28, (byte) 0x00, (byte) 0x00, (byte) 0x28, (byte) 0x00, (byte) 0x00,
//					(byte) 0x10, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // J
//		case 'K':
//			return new byte[] { (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF0, (byte) 0xFF,
//					(byte) 0x01, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0xF0, (byte) 0xE0, (byte) 0x01,
//					(byte) 0x00, (byte) 0x11, (byte) 0x00, (byte) 0x80, (byte) 0x2C, (byte) 0x00, (byte) 0x40,
//					(byte) 0x52, (byte) 0x00, (byte) 0x20, (byte) 0xA1, (byte) 0x00, (byte) 0xD0, (byte) 0xA0,
//					(byte) 0x00, (byte) 0x28, (byte) 0x40, (byte) 0x01, (byte) 0x18, (byte) 0x80, (byte) 0x01,
//					(byte) 0x00, (byte) 0x80, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // K
//		case 'L':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF0, (byte) 0xFF,
//					(byte) 0x03, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0xF0, (byte) 0x7F, (byte) 0x02,
//					(byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00,
//					(byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x80,
//					(byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // L
//		case 'M':
//			return new byte[] { (byte) 0x10, (byte) 0x00, (byte) 0xC0, (byte) 0x03, (byte) 0x00, (byte) 0x38,
//					(byte) 0x02, (byte) 0xC0, (byte) 0xC7, (byte) 0x03, (byte) 0x30, (byte) 0x3C, (byte) 0x00,
//					(byte) 0x08, (byte) 0x02, (byte) 0x00, (byte) 0x38, (byte) 0x7C, (byte) 0x00, (byte) 0xC0,
//					(byte) 0x8F, (byte) 0x03, (byte) 0x00, (byte) 0x10, (byte) 0x02, (byte) 0x00, (byte) 0x0C,
//					(byte) 0x03, (byte) 0x80, (byte) 0xF3, (byte) 0x00, (byte) 0x78, (byte) 0x08, (byte) 0x00,
//					(byte) 0x08, (byte) 0x04, (byte) 0x00, (byte) 0x70, (byte) 0x78, (byte) 0x00, (byte) 0x80,
//					(byte) 0x8F, (byte) 0x01, (byte) 0x00, (byte) 0x70, (byte) 0x02, (byte) 0x00, (byte) 0x80,
//					(byte) 0x03, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // M
//		case 'N':
//			return new byte[] { (byte) 0x0E, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF8, (byte) 0xFF,
//					(byte) 0x01, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0x10, (byte) 0xFE, (byte) 0x01,
//					(byte) 0x60, (byte) 0x01, (byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x00,
//					(byte) 0x07, (byte) 0x00, (byte) 0x00, (byte) 0x1C, (byte) 0x00, (byte) 0x00, (byte) 0x28,
//					(byte) 0x00, (byte) 0x00, (byte) 0x50, (byte) 0x00, (byte) 0x00, (byte) 0xA0, (byte) 0x00,
//					(byte) 0xF8, (byte) 0x1F, (byte) 0x01, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0xF0,
//					(byte) 0xFF, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // N
//		case 'O':
//			return new byte[] { (byte) 0x0E, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x3E,
//					(byte) 0x00, (byte) 0x80, (byte) 0xC1, (byte) 0x00, (byte) 0x60, (byte) 0x3E, (byte) 0x01,
//					(byte) 0x90, (byte) 0x41, (byte) 0x01, (byte) 0x50, (byte) 0x80, (byte) 0x02, (byte) 0x28,
//					(byte) 0x80, (byte) 0x02, (byte) 0x28, (byte) 0x80, (byte) 0x02, (byte) 0x28, (byte) 0x80,
//					(byte) 0x02, (byte) 0x28, (byte) 0x40, (byte) 0x02, (byte) 0x48, (byte) 0x30, (byte) 0x01,
//					(byte) 0x90, (byte) 0x8F, (byte) 0x00, (byte) 0x30, (byte) 0x70, (byte) 0x00, (byte) 0xC0,
//					(byte) 0x0F, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // O
//		case 'P':
//			return new byte[] { (byte) 0x09, (byte) 0xF8, (byte) 0xFF, (byte) 0x01, (byte) 0x08, (byte) 0x00,
//					(byte) 0x02, (byte) 0xC8, (byte) 0xF1, (byte) 0x01, (byte) 0x28, (byte) 0x0A, (byte) 0x00,
//					(byte) 0x28, (byte) 0x0A, (byte) 0x00, (byte) 0x48, (byte) 0x09, (byte) 0x00, (byte) 0x90,
//					(byte) 0x04, (byte) 0x00, (byte) 0x10, (byte) 0x06, (byte) 0x00, (byte) 0xE0, (byte) 0x01,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // P
//		case 'Q':
//			return new byte[] { (byte) 0x11, (byte) 0x00, (byte) 0x1F, (byte) 0x00, (byte) 0xC0, (byte) 0x60,
//					(byte) 0x00, (byte) 0x20, (byte) 0x9E, (byte) 0x00, (byte) 0x20, (byte) 0x21, (byte) 0x01,
//					(byte) 0x90, (byte) 0x40, (byte) 0x01, (byte) 0x50, (byte) 0x40, (byte) 0x02, (byte) 0x28,
//					(byte) 0x80, (byte) 0x02, (byte) 0x28, (byte) 0xB0, (byte) 0x02, (byte) 0x28, (byte) 0x50,
//					(byte) 0x02, (byte) 0x28, (byte) 0x20, (byte) 0x02, (byte) 0x28, (byte) 0x40, (byte) 0x02,
//					(byte) 0x48, (byte) 0x40, (byte) 0x02, (byte) 0x90, (byte) 0x20, (byte) 0x05, (byte) 0x20,
//					(byte) 0x9F, (byte) 0x0A, (byte) 0xC0, (byte) 0x40, (byte) 0x0A, (byte) 0x00, (byte) 0x3F,
//					(byte) 0x14, (byte) 0x00, (byte) 0x00, (byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // Q
//		case 'R':
//			return new byte[] { (byte) 0x0C, (byte) 0xF8, (byte) 0xFF, (byte) 0x01, (byte) 0x08, (byte) 0x00,
//					(byte) 0x02, (byte) 0xC8, (byte) 0xE3, (byte) 0x01, (byte) 0x28, (byte) 0x14, (byte) 0x00,
//					(byte) 0x28, (byte) 0x24, (byte) 0x00, (byte) 0x28, (byte) 0x24, (byte) 0x00, (byte) 0x50,
//					(byte) 0x24, (byte) 0x00, (byte) 0x90, (byte) 0x52, (byte) 0x00, (byte) 0x20, (byte) 0xA9,
//					(byte) 0x00, (byte) 0x60, (byte) 0x24, (byte) 0x01, (byte) 0x80, (byte) 0x43, (byte) 0x01,
//					(byte) 0x00, (byte) 0x80, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // R
//		case 'S':
//			return new byte[] { (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xE0,
//					(byte) 0x00, (byte) 0x80, (byte) 0x23, (byte) 0x01, (byte) 0x60, (byte) 0x64, (byte) 0x02,
//					(byte) 0x90, (byte) 0x89, (byte) 0x02, (byte) 0x48, (byte) 0x8A, (byte) 0x02, (byte) 0x28,
//					(byte) 0x8A, (byte) 0x02, (byte) 0x28, (byte) 0x8A, (byte) 0x02, (byte) 0x28, (byte) 0x4A,
//					(byte) 0x02, (byte) 0x28, (byte) 0x32, (byte) 0x01, (byte) 0x30, (byte) 0x84, (byte) 0x00,
//					(byte) 0x00, (byte) 0x78, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // S
//		case 'T':
//			return new byte[] { (byte) 0x0D, (byte) 0x10, (byte) 0x00, (byte) 0x00, (byte) 0x28, (byte) 0x00,
//					(byte) 0x00, (byte) 0x28, (byte) 0x00, (byte) 0x00, (byte) 0x28, (byte) 0x00, (byte) 0x00,
//					(byte) 0x28, (byte) 0x00, (byte) 0x00, (byte) 0xC8, (byte) 0xFF, (byte) 0x01, (byte) 0x08,
//					(byte) 0x00, (byte) 0x02, (byte) 0xC8, (byte) 0xFF, (byte) 0x01, (byte) 0x28, (byte) 0x00,
//					(byte) 0x00, (byte) 0x28, (byte) 0x00, (byte) 0x00, (byte) 0x28, (byte) 0x00, (byte) 0x00,
//					(byte) 0x28, (byte) 0x00, (byte) 0x00, (byte) 0x10, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // T
//		case 'U':
//			return new byte[] { (byte) 0x0D, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF0, (byte) 0x3F,
//					(byte) 0x00, (byte) 0x08, (byte) 0xC0, (byte) 0x00, (byte) 0xF0, (byte) 0x1F, (byte) 0x01,
//					(byte) 0x00, (byte) 0x60, (byte) 0x02, (byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00,
//					(byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x40,
//					(byte) 0x02, (byte) 0x00, (byte) 0x30, (byte) 0x01, (byte) 0xF0, (byte) 0xCF, (byte) 0x00,
//					(byte) 0x08, (byte) 0x38, (byte) 0x00, (byte) 0xF0, (byte) 0x07, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // U
//		case 'V':
//			return new byte[] { (byte) 0x0D, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x78, (byte) 0x00,
//					(byte) 0x00, (byte) 0x88, (byte) 0x03, (byte) 0x00, (byte) 0x38, (byte) 0x1C, (byte) 0x00,
//					(byte) 0xC0, (byte) 0xE3, (byte) 0x00, (byte) 0x00, (byte) 0x1C, (byte) 0x03, (byte) 0x00,
//					(byte) 0x20, (byte) 0x02, (byte) 0x00, (byte) 0x1C, (byte) 0x03, (byte) 0x80, (byte) 0xC3,
//					(byte) 0x00, (byte) 0x70, (byte) 0x38, (byte) 0x00, (byte) 0x08, (byte) 0x07, (byte) 0x00,
//					(byte) 0xE8, (byte) 0x00, (byte) 0x00, (byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // V
//		case 'W':
//			return new byte[] { (byte) 0x13, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x38, (byte) 0x00,
//					(byte) 0x00, (byte) 0xC8, (byte) 0x03, (byte) 0x00, (byte) 0x38, (byte) 0x3C, (byte) 0x00,
//					(byte) 0xC0, (byte) 0xCF, (byte) 0x03, (byte) 0x00, (byte) 0x10, (byte) 0x02, (byte) 0x00,
//					(byte) 0x8C, (byte) 0x03, (byte) 0x80, (byte) 0x73, (byte) 0x00, (byte) 0x70, (byte) 0x0C,
//					(byte) 0x00, (byte) 0x08, (byte) 0x02, (byte) 0x00, (byte) 0x38, (byte) 0x7C, (byte) 0x00,
//					(byte) 0xC0, (byte) 0x8F, (byte) 0x03, (byte) 0x00, (byte) 0x10, (byte) 0x02, (byte) 0x00,
//					(byte) 0x10, (byte) 0x03, (byte) 0x00, (byte) 0xCE, (byte) 0x00, (byte) 0xE0, (byte) 0x39,
//					(byte) 0x00, (byte) 0x18, (byte) 0x06, (byte) 0x00, (byte) 0xC8, (byte) 0x01, (byte) 0x00,
//					(byte) 0x38, (byte) 0x00, (byte) 0x00 }; // W
//		case 'X':
//			return new byte[] { (byte) 0x0D, (byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0x18, (byte) 0x80,
//					(byte) 0x02, (byte) 0x28, (byte) 0x60, (byte) 0x02, (byte) 0xC8, (byte) 0x10, (byte) 0x01,
//					(byte) 0x30, (byte) 0xC9, (byte) 0x00, (byte) 0xC0, (byte) 0x26, (byte) 0x00, (byte) 0x00,
//					(byte) 0x11, (byte) 0x00, (byte) 0x80, (byte) 0x10, (byte) 0x00, (byte) 0x40, (byte) 0x6E,
//					(byte) 0x00, (byte) 0x30, (byte) 0x91, (byte) 0x01, (byte) 0x88, (byte) 0x20, (byte) 0x02,
//					(byte) 0x68, (byte) 0xC0, (byte) 0x02, (byte) 0x18, (byte) 0x00, (byte) 0x03, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // X
//		case 'Y':
//			return new byte[] { (byte) 0x0C, (byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x68, (byte) 0x00,
//					(byte) 0x00, (byte) 0x98, (byte) 0x01, (byte) 0x00, (byte) 0x60, (byte) 0x86, (byte) 0x03,
//					(byte) 0x80, (byte) 0x49, (byte) 0x02, (byte) 0x00, (byte) 0x32, (byte) 0x03, (byte) 0x00,
//					(byte) 0xC4, (byte) 0x00, (byte) 0x80, (byte) 0x33, (byte) 0x00, (byte) 0x60, (byte) 0x0C,
//					(byte) 0x00, (byte) 0x18, (byte) 0x03, (byte) 0x00, (byte) 0xC8, (byte) 0x00, (byte) 0x00,
//					(byte) 0x38, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // Y
//		case 'Z':
//			return new byte[] { (byte) 0x0C, (byte) 0x10, (byte) 0x00, (byte) 0x01, (byte) 0x28, (byte) 0xC0,
//					(byte) 0x02, (byte) 0x28, (byte) 0x30, (byte) 0x02, (byte) 0x28, (byte) 0x48, (byte) 0x02,
//					(byte) 0x28, (byte) 0xB6, (byte) 0x02, (byte) 0xA8, (byte) 0x89, (byte) 0x02, (byte) 0x48,
//					(byte) 0x86, (byte) 0x02, (byte) 0x08, (byte) 0x81, (byte) 0x02, (byte) 0x88, (byte) 0x80,
//					(byte) 0x02, (byte) 0x48, (byte) 0x80, (byte) 0x02, (byte) 0x28, (byte) 0x80, (byte) 0x02,
//					(byte) 0x10, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // Z
//		case '[':
//			return new byte[] { (byte) 0x07, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xFC, (byte) 0xFF,
//					(byte) 0x3F, (byte) 0x04, (byte) 0x00, (byte) 0x20, (byte) 0xE4, (byte) 0xFF, (byte) 0x27,
//					(byte) 0x14, (byte) 0x00, (byte) 0x28, (byte) 0x14, (byte) 0x00, (byte) 0x28, (byte) 0x1C,
//					(byte) 0x00, (byte) 0x38, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // [
//		case '\\':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x18, (byte) 0x00,
//					(byte) 0x00, (byte) 0x68, (byte) 0x00, (byte) 0x00, (byte) 0x90, (byte) 0x01, (byte) 0x00,
//					(byte) 0x60, (byte) 0x06, (byte) 0x00, (byte) 0x80, (byte) 0x19, (byte) 0x00, (byte) 0x00,
//					(byte) 0x66, (byte) 0x00, (byte) 0x00, (byte) 0xB8, (byte) 0x01, (byte) 0x00, (byte) 0xC0,
//					(byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // BackSlash
//		case ']':
//			return new byte[] { (byte) 0x06, (byte) 0x1C, (byte) 0x00, (byte) 0x38, (byte) 0x14, (byte) 0x00,
//					(byte) 0x28, (byte) 0x14, (byte) 0x00, (byte) 0x28, (byte) 0xE4, (byte) 0xFF, (byte) 0x27,
//					(byte) 0x04, (byte) 0x00, (byte) 0x20, (byte) 0xFC, (byte) 0xFF, (byte) 0x3F, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // ]
//		case '^':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x30, (byte) 0x00, (byte) 0x00, (byte) 0x28, (byte) 0x00, (byte) 0x00,
//					(byte) 0x14, (byte) 0x00, (byte) 0x00, (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x0A,
//					(byte) 0x00, (byte) 0x00, (byte) 0x14, (byte) 0x00, (byte) 0x00, (byte) 0x28, (byte) 0x00,
//					(byte) 0x00, (byte) 0x30, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // ^
//		case '_':
//			return new byte[] { (byte) 0x0D, (byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00, (byte) 0x00,
//					(byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x0C,
//					(byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00,
//					(byte) 0x00, (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00, (byte) 0x00,
//					(byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x0C,
//					(byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // _
//		case '`':
//			return new byte[] { (byte) 0x06, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x0C, (byte) 0x00,
//					(byte) 0x00, (byte) 0x0C, (byte) 0x00, (byte) 0x00, (byte) 0x14, (byte) 0x00, (byte) 0x00,
//					(byte) 0x28, (byte) 0x00, (byte) 0x00, (byte) 0x30, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // `
//		case 'a':
//			return new byte[] { (byte) 0x0B, (byte) 0x00, (byte) 0xF8, (byte) 0x00, (byte) 0x00, (byte) 0x06,
//					(byte) 0x01, (byte) 0x00, (byte) 0x39, (byte) 0x02, (byte) 0x00, (byte) 0x45, (byte) 0x02,
//					(byte) 0x80, (byte) 0x84, (byte) 0x02, (byte) 0x80, (byte) 0x82, (byte) 0x02, (byte) 0x80,
//					(byte) 0x82, (byte) 0x02, (byte) 0x80, (byte) 0x7C, (byte) 0x01, (byte) 0x00, (byte) 0x01,
//					(byte) 0x02, (byte) 0x00, (byte) 0x7F, (byte) 0x02, (byte) 0x00, (byte) 0x80, (byte) 0x03,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // a
//		case 'b':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF8, (byte) 0xFF,
//					(byte) 0x03, (byte) 0x04, (byte) 0x00, (byte) 0x02, (byte) 0x7C, (byte) 0x78, (byte) 0x02,
//					(byte) 0x80, (byte) 0x84, (byte) 0x02, (byte) 0x80, (byte) 0x82, (byte) 0x02, (byte) 0x80,
//					(byte) 0x44, (byte) 0x02, (byte) 0x80, (byte) 0x38, (byte) 0x01, (byte) 0x00, (byte) 0x83,
//					(byte) 0x01, (byte) 0x00, (byte) 0x7C, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // b
//		case 'c':
//			return new byte[] { (byte) 0x09, (byte) 0x00, (byte) 0xF8, (byte) 0x00, (byte) 0x00, (byte) 0x06,
//					(byte) 0x01, (byte) 0x00, (byte) 0x31, (byte) 0x01, (byte) 0x80, (byte) 0x4C, (byte) 0x02,
//					(byte) 0x80, (byte) 0x82, (byte) 0x02, (byte) 0x80, (byte) 0x82, (byte) 0x02, (byte) 0x80,
//					(byte) 0x82, (byte) 0x02, (byte) 0x00, (byte) 0x45, (byte) 0x01, (byte) 0x00, (byte) 0xC7,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // c
//		case 'd':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x7C, (byte) 0x00, (byte) 0x00, (byte) 0x83,
//					(byte) 0x01, (byte) 0x00, (byte) 0x39, (byte) 0x01, (byte) 0x80, (byte) 0x44, (byte) 0x02,
//					(byte) 0x80, (byte) 0x82, (byte) 0x02, (byte) 0x80, (byte) 0x82, (byte) 0x02, (byte) 0x80,
//					(byte) 0x82, (byte) 0x02, (byte) 0x78, (byte) 0x7C, (byte) 0x02, (byte) 0x04, (byte) 0x00,
//					(byte) 0x02, (byte) 0xF8, (byte) 0xFF, (byte) 0x03, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // d
//		case 'e':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x7C, (byte) 0x00, (byte) 0x00, (byte) 0x82,
//					(byte) 0x01, (byte) 0x00, (byte) 0x49, (byte) 0x01, (byte) 0x80, (byte) 0xB4, (byte) 0x02,
//					(byte) 0x80, (byte) 0xB2, (byte) 0x02, (byte) 0x80, (byte) 0x9A, (byte) 0x02, (byte) 0x80,
//					(byte) 0x9A, (byte) 0x02, (byte) 0x80, (byte) 0x9A, (byte) 0x02, (byte) 0x00, (byte) 0x4D,
//					(byte) 0x01, (byte) 0x00, (byte) 0xC7, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // e
//		case 'f':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01,
//					(byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x60, (byte) 0xFC, (byte) 0x03,
//					(byte) 0x18, (byte) 0x00, (byte) 0x04, (byte) 0x44, (byte) 0xFC, (byte) 0x03, (byte) 0xA4,
//					(byte) 0x02, (byte) 0x00, (byte) 0x94, (byte) 0x02, (byte) 0x00, (byte) 0x94, (byte) 0x02,
//					(byte) 0x00, (byte) 0x08, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // f
//		case 'g':
//			return new byte[] { (byte) 0x09, (byte) 0x00, (byte) 0x7C, (byte) 0x18, (byte) 0x00, (byte) 0x82,
//					(byte) 0x28, (byte) 0x00, (byte) 0x39, (byte) 0x29, (byte) 0x80, (byte) 0x44, (byte) 0x29,
//					(byte) 0x80, (byte) 0x42, (byte) 0x25, (byte) 0x80, (byte) 0x22, (byte) 0x22, (byte) 0x80,
//					(byte) 0x1C, (byte) 0x18, (byte) 0x00, (byte) 0xF1, (byte) 0x07, (byte) 0x00, (byte) 0x0F,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // g
//		case 'h':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF8, (byte) 0xFF,
//					(byte) 0x01, (byte) 0x04, (byte) 0x00, (byte) 0x02, (byte) 0xF8, (byte) 0xF0, (byte) 0x01,
//					(byte) 0x00, (byte) 0x0D, (byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x80,
//					(byte) 0x02, (byte) 0x00, (byte) 0x80, (byte) 0xFC, (byte) 0x01, (byte) 0x80, (byte) 0x00,
//					(byte) 0x02, (byte) 0x00, (byte) 0xFF, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // h
//		case 'i':
//			return new byte[] { (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x38, (byte) 0xFF,
//					(byte) 0x01, (byte) 0xA8, (byte) 0x00, (byte) 0x02, (byte) 0x38, (byte) 0xFF, (byte) 0x01,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // i
//		case 'j':
//			return new byte[] { (byte) 0x07, (byte) 0x00, (byte) 0x00, (byte) 0x0E, (byte) 0x00, (byte) 0x00,
//					(byte) 0x12, (byte) 0x00, (byte) 0x00, (byte) 0x24, (byte) 0x38, (byte) 0x1F, (byte) 0x28,
//					(byte) 0xA8, (byte) 0xE0, (byte) 0x27, (byte) 0x38, (byte) 0x1F, (byte) 0x10, (byte) 0x00,
//					(byte) 0xE0, (byte) 0x0F, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // j
//		case 'k':
//			return new byte[] { (byte) 0x09, (byte) 0xF8, (byte) 0xFF, (byte) 0x01, (byte) 0x04, (byte) 0x00,
//					(byte) 0x02, (byte) 0xF8, (byte) 0xC7, (byte) 0x01, (byte) 0x00, (byte) 0x28, (byte) 0x00,
//					(byte) 0x00, (byte) 0x24, (byte) 0x00, (byte) 0x00, (byte) 0x4A, (byte) 0x00, (byte) 0x00,
//					(byte) 0x95, (byte) 0x01, (byte) 0x80, (byte) 0x62, (byte) 0x02, (byte) 0x80, (byte) 0x81,
//					(byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // k
//		case 'l':
//			return new byte[] { (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xF8, (byte) 0xFF,
//					(byte) 0x01, (byte) 0x04, (byte) 0x00, (byte) 0x02, (byte) 0xF8, (byte) 0xFF, (byte) 0x01,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // l
//		case 'm':
//			return new byte[] { (byte) 0x0E, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xFF,
//					(byte) 0x01, (byte) 0x80, (byte) 0x00, (byte) 0x02, (byte) 0x80, (byte) 0xF8, (byte) 0x01,
//					(byte) 0x00, (byte) 0x05, (byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x80,
//					(byte) 0xFC, (byte) 0x01, (byte) 0x80, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0xF9,
//					(byte) 0x01, (byte) 0x80, (byte) 0x04, (byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00,
//					(byte) 0x80, (byte) 0xFC, (byte) 0x01, (byte) 0x80, (byte) 0x00, (byte) 0x02, (byte) 0x00,
//					(byte) 0xFF, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // m
//		case 'n':
//			return new byte[] { (byte) 0x09, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x80, (byte) 0xFF,
//					(byte) 0x01, (byte) 0x80, (byte) 0x00, (byte) 0x02, (byte) 0x80, (byte) 0xF8, (byte) 0x01,
//					(byte) 0x00, (byte) 0x05, (byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x80,
//					(byte) 0xFC, (byte) 0x01, (byte) 0x80, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0xFF,
//					(byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // n
//		case 'o':
//			return new byte[] { (byte) 0x09, (byte) 0x00, (byte) 0x7C, (byte) 0x00, (byte) 0x00, (byte) 0x82,
//					(byte) 0x01, (byte) 0x00, (byte) 0x79, (byte) 0x02, (byte) 0x80, (byte) 0x84, (byte) 0x02,
//					(byte) 0x80, (byte) 0x82, (byte) 0x02, (byte) 0x80, (byte) 0x42, (byte) 0x02, (byte) 0x80,
//					(byte) 0x3C, (byte) 0x01, (byte) 0x00, (byte) 0x81, (byte) 0x01, (byte) 0x00, (byte) 0x7E,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // o
//		case 'p':
//			return new byte[] { (byte) 0x09, (byte) 0x80, (byte) 0xFF, (byte) 0x3F, (byte) 0x80, (byte) 0x00,
//					(byte) 0x40, (byte) 0x80, (byte) 0x78, (byte) 0x3C, (byte) 0x80, (byte) 0x84, (byte) 0x02,
//					(byte) 0x80, (byte) 0x82, (byte) 0x02, (byte) 0x80, (byte) 0x42, (byte) 0x02, (byte) 0x80,
//					(byte) 0x3C, (byte) 0x02, (byte) 0x00, (byte) 0x81, (byte) 0x01, (byte) 0x00, (byte) 0x7E,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // p
//		case 'q':
//			return new byte[] { (byte) 0x09, (byte) 0x00, (byte) 0xF8, (byte) 0x00, (byte) 0x00, (byte) 0x06,
//					(byte) 0x01, (byte) 0x00, (byte) 0x79, (byte) 0x01, (byte) 0x80, (byte) 0x84, (byte) 0x02,
//					(byte) 0x80, (byte) 0x82, (byte) 0x02, (byte) 0x80, (byte) 0x82, (byte) 0x02, (byte) 0x80,
//					(byte) 0x7C, (byte) 0x3C, (byte) 0x80, (byte) 0x00, (byte) 0x40, (byte) 0x80, (byte) 0xFF,
//					(byte) 0x3F, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // q
//		case 'r':
//			return new byte[] { (byte) 0x09, (byte) 0x80, (byte) 0xFF, (byte) 0x01, (byte) 0x80, (byte) 0x00,
//					(byte) 0x02, (byte) 0x80, (byte) 0xF8, (byte) 0x01, (byte) 0x00, (byte) 0x05, (byte) 0x00,
//					(byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x80,
//					(byte) 0x0C, (byte) 0x00, (byte) 0x80, (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0x0F,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // r
//		case 's':
//			return new byte[] { (byte) 0x08, (byte) 0x00, (byte) 0xC7, (byte) 0x01, (byte) 0x00, (byte) 0x49,
//					(byte) 0x02, (byte) 0x80, (byte) 0x94, (byte) 0x02, (byte) 0x80, (byte) 0x9A, (byte) 0x02,
//					(byte) 0x80, (byte) 0xAA, (byte) 0x02, (byte) 0x80, (byte) 0x52, (byte) 0x02, (byte) 0x80,
//					(byte) 0x24, (byte) 0x01, (byte) 0x80, (byte) 0xE7, (byte) 0x01, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // s
//		case 't':
//			return new byte[] { (byte) 0x09, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x80, (byte) 0x02,
//					(byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x60, (byte) 0xFC, (byte) 0x01,
//					(byte) 0x10, (byte) 0x00, (byte) 0x02, (byte) 0x60, (byte) 0xFC, (byte) 0x01, (byte) 0x80,
//					(byte) 0x02, (byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x01,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // t
//		case 'u':
//			return new byte[] { (byte) 0x09, (byte) 0x00, (byte) 0xFF, (byte) 0x00, (byte) 0x80, (byte) 0x00,
//					(byte) 0x01, (byte) 0x00, (byte) 0x7F, (byte) 0x02, (byte) 0x00, (byte) 0x80, (byte) 0x02,
//					(byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00, (byte) 0x80, (byte) 0x02, (byte) 0x00,
//					(byte) 0x7F, (byte) 0x02, (byte) 0x80, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0xFF,
//					(byte) 0x03, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // u
//		case 'v':
//			return new byte[] { (byte) 0x09, (byte) 0x80, (byte) 0x03, (byte) 0x00, (byte) 0x80, (byte) 0x1D,
//					(byte) 0x00, (byte) 0x00, (byte) 0xE6, (byte) 0x00, (byte) 0x00, (byte) 0x18, (byte) 0x03,
//					(byte) 0x00, (byte) 0x20, (byte) 0x02, (byte) 0x00, (byte) 0x18, (byte) 0x03, (byte) 0x00,
//					(byte) 0xE6, (byte) 0x00, (byte) 0x80, (byte) 0x1D, (byte) 0x00, (byte) 0x80, (byte) 0x03,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // v
//		case 'w':
//			return new byte[] { (byte) 0x0D, (byte) 0x80, (byte) 0x0F, (byte) 0x00, (byte) 0x80, (byte) 0xF0,
//					(byte) 0x00, (byte) 0x80, (byte) 0x0F, (byte) 0x03, (byte) 0x00, (byte) 0x10, (byte) 0x02,
//					(byte) 0x00, (byte) 0xCC, (byte) 0x01, (byte) 0x80, (byte) 0x23, (byte) 0x00, (byte) 0x80,
//					(byte) 0x20, (byte) 0x00, (byte) 0x80, (byte) 0xCF, (byte) 0x01, (byte) 0x00, (byte) 0x10,
//					(byte) 0x02, (byte) 0x00, (byte) 0x0C, (byte) 0x02, (byte) 0x80, (byte) 0xC3, (byte) 0x01,
//					(byte) 0x80, (byte) 0x3C, (byte) 0x00, (byte) 0x80, (byte) 0x03, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // w
//		case 'x':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0x00, (byte) 0x81,
//					(byte) 0x02, (byte) 0x80, (byte) 0x46, (byte) 0x02, (byte) 0x80, (byte) 0xB8, (byte) 0x01,
//					(byte) 0x00, (byte) 0x43, (byte) 0x00, (byte) 0x00, (byte) 0x44, (byte) 0x00, (byte) 0x00,
//					(byte) 0x92, (byte) 0x01, (byte) 0x80, (byte) 0x69, (byte) 0x02, (byte) 0x80, (byte) 0x84,
//					(byte) 0x02, (byte) 0x80, (byte) 0x03, (byte) 0x03, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // x
//		case 'y':
//			return new byte[] { (byte) 0x0B, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x80, (byte) 0x03,
//					(byte) 0x00, (byte) 0x80, (byte) 0x0C, (byte) 0x38, (byte) 0x80, (byte) 0x31, (byte) 0x26,
//					(byte) 0x00, (byte) 0xDE, (byte) 0x31, (byte) 0x00, (byte) 0x20, (byte) 0x0E, (byte) 0x00,
//					(byte) 0x9C, (byte) 0x01, (byte) 0x00, (byte) 0x62, (byte) 0x00, (byte) 0x80, (byte) 0x19,
//					(byte) 0x00, (byte) 0x80, (byte) 0x06, (byte) 0x00, (byte) 0x80, (byte) 0x01, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // y
//		case 'z':
//			return new byte[] { (byte) 0x09, (byte) 0x00, (byte) 0x01, (byte) 0x03, (byte) 0x80, (byte) 0x82,
//					(byte) 0x02, (byte) 0x80, (byte) 0x42, (byte) 0x02, (byte) 0x80, (byte) 0x32, (byte) 0x02,
//					(byte) 0x80, (byte) 0x4A, (byte) 0x02, (byte) 0x80, (byte) 0xA4, (byte) 0x02, (byte) 0x80,
//					(byte) 0x98, (byte) 0x02, (byte) 0x80, (byte) 0x84, (byte) 0x02, (byte) 0x80, (byte) 0x03,
//					(byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // z
//		case '{':
//			return new byte[] { (byte) 0x07, (byte) 0x00, (byte) 0x1C, (byte) 0x00, (byte) 0xF0, (byte) 0xEB,
//					(byte) 0x07, (byte) 0x08, (byte) 0x14, (byte) 0x18, (byte) 0xE4, (byte) 0xE3, (byte) 0x23,
//					(byte) 0x14, (byte) 0x00, (byte) 0x24, (byte) 0x14, (byte) 0x00, (byte) 0x28, (byte) 0x18,
//					(byte) 0x00, (byte) 0x38, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // {
//		case '|':
//			return new byte[] { (byte) 0x05, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0xFC, (byte) 0xFF, (byte) 0x0F, (byte) 0x04, (byte) 0x00, (byte) 0x08,
//					(byte) 0xFC, (byte) 0xFF, (byte) 0x0F, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // |
//		case '}':
//			return new byte[] { (byte) 0x07, (byte) 0x1C, (byte) 0x00, (byte) 0x38, (byte) 0x14, (byte) 0x00,
//					(byte) 0x24, (byte) 0xE4, (byte) 0xE3, (byte) 0x23, (byte) 0x08, (byte) 0x14, (byte) 0x18,
//					(byte) 0xF0, (byte) 0xEB, (byte) 0x07, (byte) 0x00, (byte) 0x14, (byte) 0x00, (byte) 0x00,
//					(byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // }
//		case '~':
//			return new byte[] { (byte) 0x0A, (byte) 0x00, (byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x14,
//					(byte) 0x00, (byte) 0x00, (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x06, (byte) 0x00,
//					(byte) 0x00, (byte) 0x0A, (byte) 0x00, (byte) 0x00, (byte) 0x14, (byte) 0x00, (byte) 0x00,
//					(byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x16,
//					(byte) 0x00, (byte) 0x00, (byte) 0x0E, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
//					(byte) 0x00, (byte) 0x00, (byte) 0x00 }; // ~
//		default:
//			return null;
//		}
//	}
}
