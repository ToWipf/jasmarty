name: Build Jasmarty Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: jasmarty

jobs:
  build-jasmarty:

    runs-on: ubuntu-20.04
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
        
#      - name: install
#        run: apt-get update && apt-get upgrade -y && \
#             apt install -y maven npm && \
#             npm install -g @angular/cli@latest && \
      
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      
      - name: Build jar
        run: cd scripts && ./setup.sh && ./buildFull.sh && cp ../target/jasmarty-1.0-SNAPSHOT-runner.jar jasmarty.jar
        
      - name: Save jar
        uses: actions/upload-artifact@v2
        with:
          name: jasmarty.jar
          path: scripts/jasmarty.jar
      
#      - name: Build dockerimage
#        run: cd scripts && docker build . --tag $IMAGE_NAME

      - name: Build dockerimage_arm
        run: cd scripts && docker buildx build --platform linux/arm -t ${IMAGE_NAME}-arm -f Dockerfile.arm .

      - name: Push dockerimages
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(date '+%Y-%m-%d')

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

#          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION

          docker tag ${IMAGE_NAME}-arm $IMAGE_ID:${VERSION}-arm
          docker push $IMAGE_ID:${VERSION}-arm
          
