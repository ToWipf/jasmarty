name: Build Jasmarty Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
  # Run tests for any PRs.
  pull_request:
    branches: [master]
    
env:
  IMAGE_NAME: jasmarty

jobs:
  build-jasmarty:

    runs-on: ubuntu-20.04
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      
      - name: Build jar
        run: cd scripts && ./setup.sh && ./buildFull.sh && cp ../target/jasmarty-1.0-SNAPSHOT-runner.jar jasmarty.jar
        
      - name: Save jar
        uses: actions/upload-artifact@v2
        with:
          name: jasmarty.jar
          path: scripts/jasmarty.jar

      - name: Build and Push dockerimage_arm 32
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(date '+%Y-%m-%d')

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          cd scripts && \
          docker buildx create --driver-opt image=moby/buildkit:master --name mybuilder && \
          docker buildx use mybuilder && \
          docker buildx build --platform linux/arm -t $IMAGE_ID:${VERSION}-arm -f Dockerfile.arm --push .

      - name: Build and Push dockerimage_arm 64
        run: |
          cd scripts && docker buildx build --platform linux/arm64 -t ${IMAGE_NAME}-arm_64 -f Dockerfile.arm_64 .
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(date '+%Y-%m-%d')

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag ${IMAGE_NAME}-arm_64 $IMAGE_ID:${VERSION}-arm_64
          docker push $IMAGE_ID:${VERSION}-arm_64
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION       
